   25  pip freeze
   26  django-admin startproject ebdjango
   27  cd ebdjango/
   28  python manage.py runserver
   29   history
   30  subl .
   31  source ~/eb-virt/bin/activate
   32  pip freeze > requirements.txt
   33  mkdir .ebextensions
   34  pwd
   35  cd .ebextensions/
   36  pwd
   37  vi django.config
   38  cd ..
   39  ls
   40  pwd
   41  ls
   42  pwd
   43  deactivate
   44  ls
   45  eb init -p python-3.6 django-tutorial
   46  brew install awsebcli
   47  eb init -p python-3.6 django-tutorial
   48  eb init
   49  eb create django-env
   50  import nltk
   51  def gender_features(word):
   52      return{'last_letter': word[-1]}
   53  print(gender_features('Shrek'))
   54  from nltk.corpus import names
   55  print(names.words('male.txt')[:20])
   56  print(names.words('female.txt')[:20])
   57  namesgender = ([(name, 'male') for name in names.words('male.txt')] +
   58            [(name, 'female') for name in names.words('female.txt')])
   59  print(len(namesgender))
   60  print(namesgender[:20])
   61  print(namesgender[7924:])
   62  import random
   63  random.shuffle(namesgender)
   64  print(namesgender[:20])
   65  train_names = namesgender[500:]
   66  test_names = namesgender[:500]
   67  train_set = [(gender_features(n), g) for (n, g) in train_names]
   68  test_set = [(gender_features(n), g) for (n, g) in test_names]
   69  print(train_set[:20])
   70  classifier = nltk.NaiveBayesClassifier.train(train_set)
   71  print(classifier.classify(gender_features('Neo')))
   72  print(classifier.classify(gender_features('Trinity')))
   73  print(nltk.classify.accuracy(classifier, test_set))
   74  print(classifier.show_most_informative_features(20))
   75  def geterrors(test):
   76      errors = []
   77      for (name, tag) in test:
   78          guess = classifier.classify(gender_features(name))
   79          if guess != tag:;             errors.append( (tag, guess, name) )
   80      return errors
   81  errors = geterrors(test_names)
   82  print(len(errors))
   83  def printerrors(errors):
   84      for (tag, guess, name) in sorted(errors):
   85          print('correct={:<8s} guess={:<8s} name={:<30s}'.format(tag, guess, name))
   86  printerrors(errors)
   87  from nltk.corpus import brown
   88  def pos_features(sentence, i):    
   89      features = {"suffix(1)": sentence[i][-1:],
   90  tence[i][-2:],
   91  tence[i][-3:]}
   92      if i == 0:;         features["prev-word"] = "<START>";     else:;         features["prev-word"] = sentence[i-1];     return features ;  sentence0 = brown.sents()[0]
   93  print(sentence0)
   94  print(sentence0[8])
   95  print(pos_features(sentence0, 8))
   96  tagged_sents = brown.tagged_sents(categories='news')
   97  tag_sent0 = tagged_sents[0]
   98  tag_sent0
   99  nltk.tag.untag(tag_sent0)
  100  for i,(word,tag) in enumerate(tag_sent0):
  101      print (i, word, tag)
  102  featuresets = []
  103  for tagged_sent in tagged_sents:; untagged_sent = nltk.tag.untag(tagged_sent)
  104  for i, (word, tag) in enumerate(tagged_sent):
  105  d( (pos_features(untagged_sent, i), tag) )
  106  for f in featuresets[:10]:; print (f)
  107  size = int(len(featuresets) * 0.1)
  108  train_set, test_set = featuresets[size:], featuresets[:size]
  109  print(len(train_set))
  110  print(len(test_set))
  111  classifier = nltk.NaiveBayesClassifier.train(train_set)
  112  print(nltk.classify.accuracy(classifier, test_set))
  113  from nltk.corpus import movie_reviews
  114  import random
  115  print(movie_reviews.categories())
  116  documents = [(list(movie_reviews.words(fileid)), category)
  117                for category in movie_reviews.categories()
  118                for fileid in movie_reviews.fileids(category)]
  119  print(len(documents))
  120  random.shuffle(documents)
  121  print(documents[0])
  122  all_words = nltk.FreqDist(w.lower() for w in movie_reviews.words())
  123  print(len(all_words))
  124  word_items = all_words.most_common(2000)
  125  word_features = [word for (word, freq) in word_items]   # just the words
  126  print(word_features[:100])
  127  def document_features(document, word_features):
  128  document_words = set(document)
  129  features = {}
  130  for word in word_features:; features['V_%s' % word] = (word in document_words)
  131  return features
  132  featuresets = [(document_features(d, word_features), c) for (d,c) in documents]
  133  print(featuresets[0])
  134  train_set, test_set = featuresets[100:], featuresets[:100]
  135  classifier = nltk.NaiveBayesClassifier.train(train_set)
  136  print (nltk.classify.accuracy(classifier, test_set))
  137  eb status
  138  eb deploy
  139  eb open
  140  eb deploy
  141  python manage.py migrate
  142  source ~/eb-virt/bin/activate
  143  python manage.py migrate
  144  python manage.py createsuperuser
  145  python manage.py collectstatic
  146  eb deploy
  147  eb open
  148  vi ~/ebdjango/.ebextensions/db-migrate.config
  149  eb deploy
  150  ls
  151  pwd
  152  cd ..
  153  mkdir django
  154  cd django/
  155  python -m django --versions
  156  django-admin startproject mysite
  157  cd mysite/
  158  ls
  159  subl .
  160  python manage.py runserver
  161  pwd
  162  deactivate
  163  pwd
  164  python manage.py runserver
  165  source ~/eb-virt/bin/activate
  166  python manage.py startapp polls
  167  ls
  168  python manage.py runserver
  169  python manage.py runserver
  170  python manage.py runserver
  171  python manage.py runserver
  172  python manage.py runserver
  173  pwd
  174  python manage.py migrate
  175  python manage.py makemigrations polls
  176  python manage.py sqlmigrate polls 0001
  177  python manage.py migrate
  178  python manage.py shell
  179  python manage.py shell
  180  python manage.py startapp posts
  181  python manage.py runserver
  182  python manage.py makemigrations posts
  183  python manage.py migrate
  184  python manage.py shell
  185  python manage.py shell
  186  python manage.py createsuperuser
  187  python manage.py runserver
  188  history
  189  deactivate
  190  exit() exit
  191  pwd
  192  /Users/kendraosburn/.anaconda/navigator/a.tool ; exit;
  193  defaults write com.apple.screencapture location /Users/kendraosburn/Desktop/screenshots 
  194  ls
  195  cd django/
  196  cd ..
  197  cd django/
  198  ls
  199  subl .
  200  cd mysite/
  201  python manage.py runserver
  202  ls
  203  cd ebdjango/
  204  source ~/eb-virt/bin/activate
  205  python manage.py runserver
  206  ls
  207  cd ebdjango/
  208  python manage.py runserver
  209  cd ..
  210  python manage.py runserver
  211  python manage.py startapp polls
  212  python manage.py runserver
  213  python manage.py runserver
  214  python manage.py runserver
  215  python manage.py runserver
  216  eb deploy
  217  eb open
  218  python manage.py makemigrations polls
  219  python manage.py migrate
  220  python manage.py shell
  221  python manage.py runserver
  222  python manage.py makemigrations polls
  223  python manage.py migrate
  224  python manage.py runserver
  225  deactivate
  226  cd ..
  227  virtualenv ~/eb-virt2
  228  subl .
  229  git clone https://github.com/lumin-ai/lumin-ai.github.io.git
  230  cd lumin-ai.github.io/
  231  subl .
  232  git log --oneline
  233  git checkout baec45c
  234  ruby -v
  235  gem install github-pages
  236  jekyll build
  237  gem install github-pages
  238  sudo gem install github-pages
  239  jekyll build
  240  jekyll serve
  241  mkdir tomngo
  242  mkdir lumin2
  243  cd lumin2
  244  git clone https://github.com/lumin-ai/lumin-ai.github.io.git
  245  git status
  246  git log --oneline
  247  cd lumin-ai.github.io/
  248  git log --oneline
  249  git status
  250  subl .
  251  git status
  252  git checkout -b dev-kendra-001
  253  git add .
  254  git commit -m "Adding favicon to all html pages, bumping favicon to the top, changing dimensions of favicon"
  255  git push -u origin dev-kendra-001
  256  git config credential.username "yesthisiskendra"
  257  git push -u origin dev-kendra-001
  258  git status
  259  git status
  260  git add .
  261  git commit -m "Temporary brb page"
  262  git push -u origin dev-kendra-001
  263  cd syracuse/NLP
  264  ls
  265  python Subjectivity.py 
  266  pwd
  267  pwd
  268  python Subjectivity.py 
  269  python Subjectivity.py 
  270  python Subjectivity.py 
  271  python Subjectivity.py 
  272  python Subjectivity.py 
  273  sudo gem install github pages
  274  gem update github-pages
  275  sudo gem install github pages
  276  python
  277  cd syracuse/719/advancedtopic
  278  python james.py
  279  python james.py
  280  python james.py
  281  python james.py
  282  python james.py
  283  cd syracuse/
  284  ls
  285  cd CFGdevelopment/
  286  ls
  287  python development.py
  288  subl .
  289  python development.py
  290  python development.py
  291  git status
  292  git add .
  293  git commit -m "Combining"
  294  python development.py
  295  python development.py
  296  python development.py
  297  python development.py
  298  git status
  299  git add .
  300  git commit -m "Before Colin"
  301  python development.py
  302  python development.py
  303  python development.py
  304  python development.py
  305  python development.py
  306  python development.py
  307  python development.py
  308  pwd
  309  cd ebdjango2
  310  ls
  311  pwd
  312  source ~/eb-virt2/bin/activate
  313  python manage.py runserver
  314  python manage.py runserver
  315  pwd
  316  pip freeze > requirements.txt
  317  eb deploy
  318  python manage.py runserver
  319  python manage.py runserver
  320  python manage.py runserver
  321  eb deploy
  322  eb deploy
  323  eb deploy
  324  python manage.py runserver
  325  pip freeze > requirements.txt
  326  eb deploy
  327  eb deploy
  328  eb deploy
  329  python manage.py runserver
  330  echo history -> history_ebvirt2_2.txt
  331  ls
  332  /Users/kendraosburn/.anaconda/navigator/a.tool ; exit;
  333  virtualenv ~/eb-virt2
  334  source ~/eb-virt2/bin/activate
  335  pip install django==2.1.5
  336  pip freeze
  337  django-admin startproject ebdjango2
  338  cd ebdjango2
  339  ls
  340  python manage.py runserver
  341  pip freeze > requirements.txt
  342  pwd
  343  mkdir .ebextensions
  344  subl .
  345  cd .ebextensions/
  346  vi
  347  cd ..
  348  pwd
  349  eb init -p python-3.6 django-tutorial2
  350  eb init
  351  eb create django-env2
  352  eb status
  353  eb deploy
  354  eb open
  355  eb deploy
  356  eb open
  357  eb deploy
  358  pwd
  359  python manage.py migrate
  360  python manage.py createsuperuser
  361  python manage.py collectstatic
  362  eb deploy
  363  eb open
  364  ls
  365  cd .ebextensions/
  366  pwd
  367  vi db-migrate.config
  368  eb deploy
  369  eb deploy
  370  pwd
  371  cd ..
  372  pwd
  373  python manage.py startapp polls
  374  python manage.py runserver
  375  pwd
  376  python manage.py makemigrations polls
  377  python manage.py migrate
  378  python manage.py shell
  379  pwd
  380  python manage.py createsuperuser
  381  eb deploy
  382  pwd
  383  eb deploy
  384  python manage.py runserver
  385  python manage.py shell
  386  python manage.py runserver
  387  eb deploy
  388  eb open
  389  python manage.py runserver
  390  eb deploy
  391  npm install -g vue-cli
  392  sudo npm install -g vue-cli
  393  vue init webpack-simple my-project
  394  cd my-project/
  395  pwd
  396  npm install
  397  npm install
  398  npm run dev
  399  pip install django-webpack-loader
  400  pwd
  401  npm install --save-dev webpack-bundle-tracker
  402  pwd
  403  npm run dev
  404  npm install write-file-webpack-plugin --save-dev
  405  npm run dev
  406  pwd
  407  npm run dev
  408  npm run dev
  409  npm run dev
  410  npm run dev
  411  npm run dev
  412  npm run dev
  413  npm run dev
  414  npm run build
  415  npm run dev
  416  npm run dev
  417  npm run build
  418  npm run dev
  419  eb create django-env-frontend
  420  pwdd
  421  pwd
  422  history
  423  echo history -> history_ebvirt2.txt
  424  ls
  425  pwd
  426  /Users/kendraosburn/.anaconda/navigator/a.tool ; exit;
  427  virtualenv ~/eb-virt3
  428  ~/eb-virt3/bin/activate
  429  source ~/eb-virt3/bin/activate
  430  pip install django==2.1.5
  431  django-admin startproject ebdjango3
  432  pip freeze > requirements.txt
  433  mkdir .ebextensions
  434  cd .ebextensions
  435  vi django.config
  436  subl .
  437  cd ..
  438  pwd
  439  pwd
  440  echo history -> history_ebvirt3.txt
  441  pwd
  442  ls
  443  /Users/kendraosburn/.anaconda/navigator/a.tool ; exit;
  444  virtualenv ~/eb-virt4
  445  source ~/eb-virt4/bin/activate
  446  pip install django==2.1.5
  447  django-admin startproject ebdjango4
  448  pip freeze > requirements.txt
  449  pip freeze
  450  django-admin startproject ebdjango4
  451  cd ebdjango4
  452  pwd
  453  python manage.py runserver
  454  pwd
  455  pip freeze > requirements.txt
  456  pwd
  457  mkdir .ebextensions
  458  cd .ebextensions
  459  vi django.config
  460  pwd
  461  cd ..
  462  pwd
  463  eb init -p python-3.6 django-tutorial4
  464  eb init
  465  eb create django-env4
  466  eb status
  467  subl .
  468  eb deploy
  469  git status
  470  git init
  471  git config credential.username "yesthisiskendra"
  472  git checkout master
  473  git add .
  474  git commit -m "First commit woot woot"
  475  git remote add origin https://github.com/yesthisiskendra/wakemeupbeforeyoudjango.git
  476  git push -u origin master
  477  history
  478  git checkout master
  479  eb use prod
  480  eb open
  481  eb use dev
  482  eb open dev
  483  eb open default
  484  eb use dev
  485  eb deploy --staged
  486  eb deploy
  487  eb list
  488  eb use django-env4
  489  eb deploy
  490  echo history > django_0603_eb4
  491  /Users/kendraosburn/.anaconda/navigator/a.tool ; exit;
  492  cd getthegist/
  493  ls
  494  git status
  495  git add
  496  git add .
  497  git commit -m "Tidying"
  498  git checkout recurve2
  499  git checkout recurve1
  500  git checkout recurve
  501  cd yesthisiskendra.github.io/
  502  subl .
  503  git status
  504  git status
  505  git add .
  506  git commit -m "Adding happiness data"
  507  git push -u origin master
  508  git add .
  509  git commit -m "Adding homework 8"
  510  git push -u origin master
  511  git status
  512  git add .
  513  git commit -m "Add best happiness plots"
  514  git push -u origin master
  515  git status
  516  git add .
  517  git commit -m "More happiness plots -- plotting each factor, top and bottom 20"
  518  git push -u origin master
  519  python
  520  git status
  521  git add .
  522  git commit -m "R code for happiness project graphs"
  523  git push -u origin master
  524  history > history_061919.txt
